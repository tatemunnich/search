{"version":3,"sources":["components/results/Styles.js","reducers/platformToggle.js","actions/types.js","reducers/setResults.js","reducers/setQuery.js","reducers/toggleSubmitted.js","reducers/toggleCleared.js","reducers/toggleToggled.js","reducers/setSubmittedQuery.js","reducers/index.js","components/results/IconGrabber.js","components/results/ClassIconGrabber.js","components/results/ResultItem.js","components/results/emailRequestLink.js","components/results/Results.js","components/layout/Header.js","actions/index.js","components/search/FuseInstances.js","components/search/Styles.js","components/search/SearchBar.js","components/layout/ToggleButtons.js","App.js","index.js"],"names":["resultItemStyle","classification","color","background","platformToggle","state","Platform","ANDROID","action","type","payload","setResults","setQuery","toggleSubmitted","toggleCleared","toggleToggled","setSubmittedQuery","IOS","rootReducer","platform","results","query","submitted_query","submitted","cleared","toggled","connect","ind","className","alt","src","process","toString","ClassIconGrabber","ResultItem","appName","appClassification","url","href","target","rel","style","textDecoration","emailRequestLink","apps","map","app","key","id","name","Header","options","keys","ignoreLocation","threshold","android_data","require","_android_fuse","Fuse","ios_data","_ios_fuse","searchButtonStyle","backgroundColor","dispatch","onSearchSubmit","e","preventDefault","fuse","length","search","limit","res","item","appSearch","value","onSearchChange","clearSearch","refFunction","input","blur","focus","onSubmit","onChange","autoComplete","autoFocus","spellCheck","ref","onClick","icon","faTimes","faSearch","onButtonChange","ToggleButton","checked","App","Component","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f570bc2.chunk.js","sourcesContent":["\r\nconst resultItemStyle = (classification) => {\r\n        let color;\r\n        switch (classification) {\r\n            case '1':\r\n                color = '#d3f2f3';\r\n                break;\r\n            case '2':\r\n                color = '#d3f2f3';\r\n                break;\r\n            case '3':\r\n                color = '#d3f2f3';\r\n                break;\r\n            case '4':\r\n                color = '#e5daf6';\r\n                break;\r\n            case '5':\r\n                color = '#e5daf6';\r\n                break;\r\n            case '6':\r\n                color = '#efdffc';\r\n                break;\r\n            default:\r\n                color = '#f5f5f5';\r\n        }\r\n\r\n    return {\r\n        background: color,\r\n    }\r\n};\r\n\r\nexport default resultItemStyle;\r\n","import {TOGGLE_PLATFORM} from \"../actions/types\";\r\nimport {Platform} from \"./index\";\r\n\r\n\r\nconst platformToggle = (state = Platform.ANDROID, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_PLATFORM:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default platformToggle\r\n","export const TOGGLE_PLATFORM = 'TOGGLE_PLATFORM'\r\nexport const SET_RESULTS = 'SET_RESULTS'\r\nexport const SET_QUERY = 'SET_QUERY'\r\nexport const SET_SUBMITTED_QUERY = 'SET_SUBMITTED_QUERY'\r\nexport const TOGGLE_SUBMITTED = 'TOGGLE_SUBMITTED'\r\nexport const TOGGLE_CLEARED = 'TOGGLE_CLEARED'\r\nexport const TOGGLE_TOGGLED = 'TOGGLE_TOGGLED'\r\n","import {SET_RESULTS} from \"../actions/types\";\r\n\r\n\r\nconst setResults = (state = [], action) => {\r\n    switch (action.type) {\r\n        case SET_RESULTS:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setResults\r\n","import {SET_QUERY} from \"../actions/types\";\r\n\r\n\r\nconst setQuery = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case SET_QUERY:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setQuery\r\n","import {TOGGLE_SUBMITTED} from \"../actions/types\";\r\n\r\n\r\nconst toggleSubmitted = (state = false, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SUBMITTED:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default toggleSubmitted\r\n","import {TOGGLE_CLEARED} from \"../actions/types\";\r\n\r\n\r\nconst toggleCleared = (state = false, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_CLEARED:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default toggleCleared\r\n","import {TOGGLE_TOGGLED} from \"../actions/types\";\r\n\r\n\r\nconst toggleToggled = (state = false, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_TOGGLED:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default toggleToggled\r\n","import {SET_SUBMITTED_QUERY} from \"../actions/types\";\r\n\r\n\r\nconst setSubmittedQuery = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case SET_SUBMITTED_QUERY:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setSubmittedQuery\r\n","import platformToggle from \"./platformToggle\";\r\nimport setResults from \"./setResults\";\r\nimport setQuery from \"./setQuery\";\r\nimport toggleSubmitted from \"./toggleSubmitted\";\r\nimport toggleCleared from \"./toggleCleared\";\r\nimport toggleToggled from \"./toggleToggled\";\r\nimport setSubmittedQuery from \"./setSubmittedQuery\";\r\n\r\n\r\nexport const Platform = {\r\n    IOS: 'IOS',\r\n    ANDROID: 'ANDROID'\r\n}\r\n\r\nconst rootReducer = (state = {}, action) => {\r\n    return {\r\n        platform: platformToggle(state.platform, action),\r\n        results: setResults(state.results, action),\r\n        query: setQuery(state.query, action),\r\n        submitted_query: setSubmittedQuery(state.submitted_query, action),\r\n        submitted: toggleSubmitted(state.submitted, action),\r\n        cleared: toggleCleared(state.cleared, action),\r\n        toggled: toggleToggled(state.toggled, action)\r\n    }\r\n}\r\n\r\nexport default rootReducer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Platform} from \"../../reducers\";\r\n\r\n\r\nconst IconGrabber = ({ind, platform}) => {\r\n    // TODO: add no results message (possibly with email link)\r\n\r\n    return (\r\n        <img\r\n            className=\"appIcon\" alt=\"icon\"\r\n            src={platform===Platform.ANDROID\r\n                 ? process.env.PUBLIC_URL + '/icons_png/' + ind.toString() + '.png'\r\n                 : process.env.PUBLIC_URL + '/apple_icons/' + ind.toString() + '.png'\r\n                }\r\n        />\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        platform: state.platform,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(IconGrabber)\r\n","import React from \"react\";\r\n\r\nconst ClassIconGrabber = ({classification}) => {\r\n\r\n    return (\r\n        <img\r\n            className=\"classIcon\" src={process.env.PUBLIC_URL + '/svg_icons/' + classification + '.svg'} alt=\"class\"\r\n        />\r\n    )\r\n};\r\n\r\nexport default ClassIconGrabber\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport resultItemStyle from \"./Styles\";\r\nimport IconGrabber from \"./IconGrabber\";\r\nimport ClassIconGrabber from \"./ClassIconGrabber\";\r\n\r\n\r\nconst ResultItem = ({appName, appClassification, ind, url}) => {\r\n    return (\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" style={{textDecoration: \"none\"}}>\r\n            <div className=\"appResult\" style={resultItemStyle(appClassification)}>\r\n                <IconGrabber ind={ind}/>\r\n                <p className=\"appResultText\">{appName}</p>\r\n                <ClassIconGrabber classification={appClassification}/>\r\n            </div>\r\n        </a>\r\n    )\r\n};\r\n\r\nResultItem.propTypes = {\r\n    appName: PropTypes.string.isRequired,\r\n    appClassification: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ResultItem\r\n","const emailRequestLink = (query, platform) => {\r\n    return (\r\n        // https://mailtolink.me/ (put whatever you want here)\r\n        `\r\n        mailto:apprequest@betteryou.ai?subject=Request%20for%20Classification%20--%20${query}%20--%20${platform}&body=Hi%2C%0D%0A%0D%0AI'd%20like%20to%20be%20getting%20credit%20for%20using%20${query}.%0D%0A%0D%0A\r\n        `\r\n    )\r\n}\r\n\r\nexport default emailRequestLink\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from 'prop-types';\r\nimport ResultItem from \"./ResultItem\";\r\nimport emailRequestLink from \"./emailRequestLink\";\r\n\r\n\r\nconst Results = ({apps, submitted_query, platform}) => {\r\n    return (\r\n    <div>\r\n        <div className=\"appResults\">\r\n                {apps.map((app) => {\r\n                    return (<ResultItem\r\n                                key={app.id}\r\n                                appName={app.name} ind={app.id}\r\n                                appClassification={app.classification}\r\n                                url={app.url}\r\n                            />)\r\n                })}\r\n            </div>\r\n\r\n        {submitted_query === \"\" ? null :\r\n            <footer>\r\n                <a href={emailRequestLink(submitted_query, platform)} target=\"_blank\" rel=\"noopener noreferrer\"\r\n                   style={{textDecoration: \"none\"}}>\r\n                    <div>\r\n                        <p>{\"Can't find what you're looking for? Click to send a request to get credit for \" + submitted_query}</p>\r\n                    </div>\r\n                </a>\r\n            </footer>\r\n        }\r\n    </div>);\r\n}\r\n\r\nResults.propTypes = {\r\n    apps: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        apps: state.results,\r\n        submitted_query: state.submitted_query,\r\n        platform: state.platform\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Results);\r\n","import React from \"react\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\" >\r\n            <img src={process.env.PUBLIC_URL + \"/logos/Asset 1.svg\"} alt=\"logo\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {\r\n    TOGGLE_PLATFORM,\r\n    SET_RESULTS,\r\n    SET_QUERY,\r\n    TOGGLE_SUBMITTED,\r\n    TOGGLE_CLEARED,\r\n    TOGGLE_TOGGLED,\r\n    SET_SUBMITTED_QUERY\r\n} from \"./types\";\r\n\r\n\r\nexport function togglePlatform(payload) {\r\n    return {type: TOGGLE_PLATFORM, payload}\r\n}\r\n\r\nexport function setResults(payload) {\r\n    return {type: SET_RESULTS, payload}\r\n}\r\n\r\nexport function setQuery(payload) {\r\n    return {type: SET_QUERY, payload}\r\n}\r\n\r\nexport function setSubmittedQuery(payload) {\r\n    return {type: SET_SUBMITTED_QUERY, payload}\r\n}\r\n\r\nexport function toggleSubmitted() {\r\n    return {type: TOGGLE_SUBMITTED}\r\n}\r\n\r\nexport function toggleCleared() {\r\n    return {type: TOGGLE_CLEARED}\r\n}\r\n\r\nexport function toggleToggled() {\r\n    return {type: TOGGLE_TOGGLED}\r\n}\r\n","import Fuse from \"fuse.js\";\r\nimport {Platform} from \"../../reducers\";\r\n\r\n\r\nconst options = {\r\n    keys: ['name'],\r\n    ignoreLocation: true,\r\n    threshold: 0.3\r\n};\r\n\r\nconst android_data = require('../../app_data/android_data.json')\r\nconst android_fuse = new Fuse(android_data, options)\r\nconst _android_fuse = android_fuse;\r\n\r\nconst ios_data = require('../../app_data/apple_data.json')\r\nconst ios_fuse = new Fuse(ios_data, options)\r\nconst _ios_fuse = ios_fuse;\r\n\r\n\r\nconst appSearch = (query, platform) => {\r\n    let fuse;\r\n    switch (platform) {\r\n        case Platform.ANDROID:\r\n            fuse = _android_fuse; break\r\n        case Platform.IOS:\r\n            fuse = _ios_fuse; break\r\n        default:\r\n            fuse = _android_fuse; break\r\n    }\r\n\r\n    if (query.length > 0) {\r\n        const result = fuse.search(query, {limit: 25})\r\n        return result.map(res => res.item)\r\n    } else {\r\n        return []\r\n    }\r\n}\r\n\r\nexport {appSearch}\r\n","export const searchButtonStyle = (query) => {\r\n    if (query === '') {\r\n        return {\r\n\r\n        }\r\n    } else {\r\n        return {\r\n            backgroundColor: 'rgba(138,43,226,0.66)',\r\n            color: \"white\"\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {setResults, setQuery, toggleSubmitted, toggleCleared, toggleToggled, setSubmittedQuery} from \"../../actions\";\r\nimport {appSearch} from \"./FuseInstances\";\r\nimport {searchButtonStyle} from \"./Styles\"\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst SearchBar = ({query, platform, submitted, cleared, toggled, onSearchSubmit, onSearchChange, clearSearch, refFunction}) => {\r\n    return (\r\n        <form className=\"searchBar\" onSubmit={e => onSearchSubmit(e, platform)} >\r\n\r\n            <input\r\n                onChange={onSearchChange}\r\n                className=\"searchInput\"\r\n                type=\"text\"\r\n                name=\"query\"\r\n                autoComplete=\"off\"\r\n                value={query}\r\n                autoFocus={true}\r\n                spellCheck={false}\r\n                ref={input => refFunction(input, submitted, cleared, toggled)}\r\n            />\r\n\r\n            { query === \"\"\r\n                ? null\r\n                :   <button className=\"clearButton\" type=\"reset\" onClick={clearSearch}>\r\n                        <FontAwesomeIcon icon={faTimes}/>\r\n                    </button>\r\n            }\r\n\r\n\r\n            <button className=\"searchButton\" type=\"submit\" style={searchButtonStyle(query)}>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        platform: state.platform,\r\n        query: state.query,\r\n        submitted: state.submitted,\r\n        cleared: state.cleared,\r\n        toggled: state.toggled\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchSubmit: (e, platform) => {\r\n            e.preventDefault()\r\n            const results = appSearch(e.target[0].value, platform)\r\n            dispatch(setResults(results))\r\n            dispatch(toggleSubmitted())\r\n            dispatch(setSubmittedQuery(e.target[0].value))\r\n        },\r\n\r\n        onSearchChange: (e) => {\r\n            dispatch(setQuery(e.target.value))\r\n        },\r\n\r\n        clearSearch: () => {\r\n            dispatch(setQuery(\"\"));\r\n            dispatch(toggleCleared())\r\n        },\r\n\r\n        refFunction: (input, submitted, cleared, toggled) => {\r\n            input && submitted && dispatch(toggleSubmitted()) && input.blur();\r\n            input && cleared && dispatch(toggleCleared()) && input.focus();\r\n            input && toggled && dispatch(toggleToggled()) && input.focus();\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar)\r\n","import React from \"react\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport {connect} from \"react-redux\";\r\nimport {setResults, setSubmittedQuery, togglePlatform, toggleToggled} from \"../../actions\"\r\nimport {Platform} from \"../../reducers\";\r\n\r\nconst ToggleButtons = ({platform, onButtonChange}) => {\r\n\r\n    return (\r\n        <div className=\"radioButtons\">\r\n            <ToggleButton className=\"radioButton\" type=\"radio\"\r\n                onChange={()=>onButtonChange(Platform.ANDROID)}\r\n                value={1}\r\n                checked={platform===Platform.ANDROID}\r\n            >\r\n                Android\r\n            </ToggleButton>\r\n\r\n            <ToggleButton className=\"radioButton\" type=\"radio\"\r\n                onChange={()=>onButtonChange(Platform.IOS)}\r\n                value={2}\r\n                checked={platform===Platform.IOS}\r\n            >\r\n                iOS\r\n            </ToggleButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        platform: state.platform\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onButtonChange: (platform) => {\r\n            dispatch(togglePlatform(platform))\r\n            dispatch(setResults([]))\r\n            dispatch(setSubmittedQuery(\"\"))\r\n            dispatch(toggleToggled())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleButtons)\r\n","import React, {Component} from 'react';\r\nimport './css/App.css';\r\nimport Results from \"./components/results/Results\";\r\nimport Header from \"./components/layout/Header\";\r\nimport SearchBar from \"./components/search/SearchBar\";\r\nimport ToggleButtons from \"./components/layout/ToggleButtons\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"appContainer\">\r\n                    <Header />\r\n                    <ToggleButtons />\r\n                    <SearchBar />\r\n                    <Results />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport {createStore} from 'redux';\r\nimport rootReducer from \"./reducers\";\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nconst store = createStore(rootReducer, {});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <React.StrictMode>\r\n          <App />\r\n      </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}